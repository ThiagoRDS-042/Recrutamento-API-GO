basePath: /api/v1
definitions:
  dtos.ContractResponse:
    properties:
      cliente_id:
        type: string
      cliente_nome:
        type: string
      cliente_tipo:
        type: string
      endereco_bairro:
        type: string
      endereco_id:
        type: string
      endereco_logradouro:
        type: string
      endereco_numero:
        type: integer
      id:
        type: string
    type: object
  entities.Cliente:
    properties:
      nome:
        type: string
      tipo:
        type: string
    type: object
  entities.Contrato:
    properties:
      ponto_id:
        type: string
    type: object
  entities.Endereco:
    properties:
      bairro:
        type: string
      logradouro:
        type: string
      numero:
        type: integer
    type: object
  utils.Response:
    properties:
      message: {}
    type: object
host: localhost:2222
info:
  contact:
    email: thiagords042@gmail.com
    name: Thiago Rodrigues
    url: http://thiagords042/support
  description: Uma API básica para cadastro de clientes, endereços e contratos.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API Recrutamento
  version: "1.0"
paths:
  /cliente/{id}:
    delete:
      consumes:
      - application/json
      description: rota para a exclusão do cliente pelo id
      parameters:
      - description: id do cliente
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: deleta o cliente
      tags:
      - client
    get:
      consumes:
      - application/json
      description: rota para a pesquisa do cliente pelo id
      parameters:
      - description: id do cliente
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Cliente'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: pesquisa o cliente
      tags:
      - client
    put:
      consumes:
      - application/json
      description: rota para a atualização dos dados do cliente a partir do id
      parameters:
      - description: atualizar cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/entities.Cliente'
      - description: id do cliente
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Cliente'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: atualiza o cliente
      tags:
      - client
  /clientes:
    get:
      consumes:
      - application/json
      description: rota para a listagem de todos os clientes existentes no banco de
        dados
      parameters:
      - description: tipo de cliente
        in: query
        name: tipo
        type: string
      - description: nome do cliente
        in: query
        name: nome
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Cliente'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: lista os clientes existentes
      tags:
      - client
    post:
      consumes:
      - application/json
      description: rota para o cadastro de novos clientes
      parameters:
      - description: Criar Novo Cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/entities.Cliente'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Cliente'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: cria um novo cliente
      tags:
      - client
  /contrato/{id}:
    delete:
      consumes:
      - application/json
      description: rota para a exclusão do contrato pelo id
      parameters:
      - description: id do contrato
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: deleta o contrato
      tags:
      - contract
    get:
      consumes:
      - application/json
      description: rota para a pesquisa do contrato pelo id
      parameters:
      - description: id do contrato
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ContractResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: pesquisa o contrato
      tags:
      - contract
    put:
      consumes:
      - application/json
      description: rota para a atualização dos dados do contrato a partir do id
      parameters:
      - description: atualizar contrato
        enum:
        - Em vigor
        - Desativado Temporario
        - Cancelado
        in: body
        name: estado
        required: true
        schema:
          type: string
      - description: id do contrato
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Contrato'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: atualiza o contrato
      tags:
      - contract
  /contratos:
    get:
      consumes:
      - application/json
      description: rota para a listagem de todos os contratos existentes no banco
        de dados
      parameters:
      - description: id do cliente
        in: query
        name: cliente_id
        type: string
      - description: id do endereço
        in: query
        name: endereco_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ContractResponse'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: lista os contratos existentes
      tags:
      - contract
    post:
      consumes:
      - application/json
      description: rota para o cadastro de novos contratos a partir do id do ponto
      parameters:
      - description: Criar Novo Contrato
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/entities.Contrato'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Contrato'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: cria um novo contrato
      tags:
      - contract
  /endereco/{id}:
    delete:
      consumes:
      - application/json
      description: rota para a exclusão do endereço pelo id
      parameters:
      - description: id do endereço
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: deleta o endereço
      tags:
      - address
    get:
      consumes:
      - application/json
      description: rota para a pesquisa do endereço pelo id
      parameters:
      - description: id do endereço
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Endereco'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: pesquisa o endereço
      tags:
      - address
    put:
      consumes:
      - application/json
      description: rota para a atualização dos dados do endereço a partir do id
      parameters:
      - description: atualizar endereço
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/entities.Endereco'
      - description: id do endereço
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Endereco'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: atualiza o endereço
      tags:
      - address
  /enderecos:
    get:
      consumes:
      - application/json
      description: rota para a listagem de todos os endereços existentes no banco
        de dados
      parameters:
      - description: logradouro
        in: query
        name: logradouro
        type: string
      - description: bairro
        in: query
        name: bairro
        type: string
      - description: numero da casa
        in: query
        name: numero
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Endereco'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      summary: lista os endreços existentes
      tags:
      - address
    post:
      consumes:
      - application/json
      description: rota para o cadastro de novos endereços
      parameters:
      - description: Criar Novo Endereço
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/entities.Endereco'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Endereco'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
      summary: cria um novo endereço
      tags:
      - address
swagger: "2.0"
